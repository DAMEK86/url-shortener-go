name: Go

on:
  push:
    branches: [ main ]
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches: [ main ]

jobs:
  build-and-verify:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Test
      run: go test ./...
    
    - name: Get next version
      uses: reecetech/version-increment@2023.4.1
      id: version
      with:
        scheme: semver
    - name: set build values
      run: |
        echo "sha_short=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"
        echo "build_version=${{ steps.version.outputs.version }}" >> "$GITHUB_ENV"
    - name: Build
      run: ./do build "linux" ${{ env.build_version }}
    outputs:
      buildVersion: ${{ env.build_version }}
      sourceVersion: ${{ env.sha_short }}
  
  deploy:
    needs: build-and-verify
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: damek/url-shortener
          labels: |
            maintainer=Andreas Rehn
            org.opencontainers.image.title=URL shortener
            org.opencontainers.image.description=shorten and resolve URLs
          # generate Docker tags based on the following events/attributes
          flavor: latest=true
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BUILD_VERSION=${{ needs.build-and-verify.outputs.buildVersion }}
            SOURCE_VERSION=${{ needs.build-and-verify.outputs.sourceVersion }}